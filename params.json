{"name":"clone-story","tagline":"Clone/Duplicate a Pivotal Ticket Story via a JavaScript bookmarklet.","body":"clone-story\r\n==========================\r\n\r\nClones a Pivotal Ticket Story via a JavaScript bookmarklet.\r\n\r\nThis is a known issue over at Pivotal and it appears they may eventually get around to implementing it themselves sometime in 2014 per this discussion:\r\n\r\nhttp://community.pivotaltracker.com/pivotal/topics/new_feature_duplicate_story\r\n\r\nThis JavaScript bookmarklet was created to deal with a minor annoyance with PivotalTracker when attempting to do iteration planning and wanting to clone a bunch of tickets when creating stories.\r\n\r\nI decided to go with a bookmarklet approach because I use Safari and don't enjoy installing plugins if not totally necessary. \r\n\r\n## Installation\r\n\r\n* copy source from bookmarklet.js\r\n* create new bookmark in your browser\r\n* paste code into the 'address' field\r\n\r\n## Usage\r\n\r\nThe bookmarklet duplicates the Pivotal Tracker story that is currently selected via a focus on the textarea. It will prompt you if you have not selected the text field of the ticket you wish to duplicate/clone.\r\n\r\n![Example of Usage](https://raw.github.com/mjelks/pivotaltracker-clone-story/master/img/screen1.png \"Usage Example (Screenshot 1)\")\r\n\r\n## Compatibility\r\n\r\nTested in the latest version of Chrome and Safari 6.1. You will need at least Safari 6.0+ as I believe that is that first version that supports the MutationObserver. Here is a handy chart with the latest support:\r\n\r\nhttp://caniuse.com/mutationobserver\r\n\r\n\r\n## Current Issues\r\n\r\n* This is heavily reliant on jQuery and specific selectors. I can imagine this will break if the selector(s) change. Any better approaches would be appreciated, but this is a quick solution.\r\n* Currently the bookmarklet may behave strangely due to the MutationObserver(). I am currently unable to run the .disconnect() method without it not working (?)\r\n* copying owner. I need to add another function to handle that. any other fields should be added as additional functions and added as part of the observer method. Make sure to add any values to the json object that gets passed to the hidden field.\r\n\r\n## Contributing\r\n\r\nIf you want to alter this code (totally fine as it's under the MIT license), please start at the source.js file. Feel free to modify that since it is nicely commented. I have created a perl script that will strip out comments and console.log statements and is used to generate the final bookmarklet.js file. To execute simply run the command:\r\n\r\n```\r\nperl compile.pl\r\n```\r\n\r\nfrom the source repo location.\r\n","google":"UA-220358-9","note":"Don't delete this file! It's used internally to help with page regeneration."}